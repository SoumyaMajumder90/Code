January
6th
1971. Find if Path Exists in Graph [we can use both bfs and dfs to create the visited array. if visited array is false then no path is there else there is path]


997. Find the Town Judge [maintain a trustcount array. if a trusts b. decrease a trustcount and increase b trustcount. at end person with trustcount n-1 will be judge]

802. Find Eventual Safe States [not completed]

7th
63. Unique Paths II [memoization- use memo 2d array. if path exist return 1, if not then return 0
		     tabulation- use double for loop for iteration. iteration will be always faster than recursion ]
120. Triangle
	   
111 Mimimum depth of Binary tree [if root is null return 0. if root->left null return 1+(mindepth(root->right) and vice verse. return 1+ min(left, right)]



108. Convert Sorted Array to Binary Search Tree
169 Majority element [using moore voting algorithm]



931. Minimum Falling Path Sum [memoization is giving TLE so go for tabulation/ bottom up approach ]

11th 
45. Jump Game II
179. Largest Number [convert into string and then return] 


12th

1248. Count Number of Nice Subarrays[sliding window. increment j till odd number occurs. then increment oddcount. if oddcount==target.now count the subarrays till j. then add them in count]

1358. Number of Substrings Containing All Three Characters [almost same as previous. just increment j till a,b,c>1 if so start to increase i and increase count till a,b,c<1 then add the count to main count to count all the subarrays]

1423. Maximum Points You Can Obtain from Cards[ok first i used a greedy solution to take the largest between the first and last and take that which is wrong as greedy wont give us best result always. so we use window to track all possible window and give out the sum. we start by taking sum of 1st k number. then substract that and add last index sum to see if it is larger. this way we calculate the whole window]


701. Insert into a Binary Search Tree


13th

416. Partition Equal Subset Sum [if sum is odd return false. as both partition have equal sum. so it should be s/2. if we find target==0 return true. then simple memoization approach]
